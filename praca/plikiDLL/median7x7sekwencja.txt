// dllmain.cpp : Definiuje punkt wejœcia dla aplikacji DLL.
#include "stdafx.h"
#include <vector>
#include<algorithm>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <complex>
#include <map>
#include <math.h>
#define PI = 3.14;
using std::complex;
using std::exp;
using std::size_t;
using std::vector;
using std::cos;
using std::sin;
#define M_PI 3.14159265358979323846
using namespace std;
BOOL APIENTRY DllMain(HMODULE hModule,
	DWORD  ul_reason_for_call,
	LPVOID lpReserved
)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

extern "C" __declspec(dllexport)void Median(double(&m)[], int W, int H, int Frames)
{
	vector<vector<vector<double>>>T3D;
	vector<vector<vector<double>>>T3D_res;
	int l = 0;
	for (int k = 0; k < Frames; k++)
	{
		vector<vector<double>> table;
		for (int i = 0; i < W; i++)
		{
			vector<double> row;
			for (int j = 0; j < H; j++)
			{
				row.push_back(m[l]);
				l++;
			}
			table.push_back(row);
		}
		T3D.push_back(table);
	}
	T3D_res = T3D;

	for (int k = 0; k < Frames - 1; k++)
	{
		for (int i = 1; i < W - 5; i++)
		{
			for (int j = 1; j < H - 5; j++)
			{
				vector<double>window;
				for (int m = -1; m <= 5; m++)
				{
					for (int n = -1; n <= 5; n++)
						window.push_back(T3D[k][i + m][j + n]);
				}
				nth_element(window.begin(), window.begin() + 24, window.end());
				T3D_res[k][i][j] = window[24];

			}
		}
	}

	l = 0;
	for (int k = 0; k < Frames - 1; k++)
	{
		for (int i = 0; i < W; i++)
		{
			for (int j = 0; j < H; j++)
			{

				m[l] = T3D_res[k][i][j];
				l++;
			}
		}
	}
}


